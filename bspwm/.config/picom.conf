# Thank you code_nomad: http://9m.no/ꪯ鵞
# and Arch Wiki contributors: https://wiki.archlinux.org/index.php/Compton

#################################
#
# Backend
#
#################################

# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "xrender";

#################################
#
# GLX backend
#
#################################

glx-no-stencil = true;

# GLX backend: Copy unmodified regions from front buffer instead of redrawing them all.
# My tests with nvidia-drivers show a 10% decrease in performance when the whole screen is modified,
# but a 20% increase when only 1/4 is.
# My tests on nouveau show terrible slowdown.
glx-copy-from-front = false;

# GLX backend: Use MESA_copy_sub_buffer to do partial screen update.
# My tests on nouveau shows a 200% performance boost when only 1/4 of the screen is updated.
# May break VSync and is not available on some drivers.
# Overrides --glx-copy-from-front.
# glx-use-copysubbuffermesa = true;

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes, but is known to break things on some drivers (LLVMpipe).
# Recommended if it works.
# glx-no-rebind-pixmap = true;

# GLX backend: GLX buffer swap method we assume.
# Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).
# undefined is the slowest and the safest, and the default value.
# copy is fastest, but may fail on some drivers,
# 2-6 are gradually slower but safer (6 is still faster than 0).
# Usually, double buffer means 2, triple buffer means 3.
# buffer-age means auto-detect using GLX_EXT_buffer_age, supported by some drivers.
# Useless with --glx-use-copysubbuffermesa.
# Partially breaks --resize-damage.
# Defaults to undefined.
# glx-swap-method = "copy";

#################################
#
# Shadows
#
#################################

# Enabled client-side shadows on windows.
shadow = false;
# The blur radius for shadows. (default 12)
shadow-radius = 60;
# The left offset for shadows. (default -15)
shadow-offset-x = -60;
# The top offset for shadows. (default -15)
shadow-offset-y = -60;
# The translucency for shadows. (default .75)
shadow-opacity = 1;

# Set if you want different colour shadows
# shadow-red = 0.0;
# shadow-green = 0.0;
# shadow-blue = 0.0;

# The shadow exclude options are helpful if you have shadows enabled. Due to the way picom draws its shadows, certain applications will have visual glitches
# (most applications are fine, only apps that do weird things with xshapes or argb are affected).
# This list includes all the affected apps I found in my testing. The "! name~=''" part excludes shadows on any "Unknown" windows, this prevents a visual glitch with the XFWM alt tab switcher.
shadow-exclude = [
    "! name~=''",
    "name = 'Notification'",
    "name = 'Plank'",
    "name = 'Docky'",
    "name = 'Kupfer'",
    "name = 'xfce4-notifyd'",
    "name *= 'VLC'",
    "name *= 'compton'",
    "name *= 'picom'",
    "name *= 'Chromium'",
    "name *= 'Chrome'",
    "class_g = 'Firefox' && argb",
    "class_g = 'Conky'",
    "class_g = 'Kupfer'",
    "class_g = 'Synapse'",
    "class_g ?= 'Notify-osd'",
    "class_g ?= 'Cairo-dock'",
    "class_g ?= 'Xfce4-notifyd'",
    "class_g ?= 'Xfce4-power-manager'",
    "_GTK_FRAME_EXTENTS@:c",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
];
# Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)
shadow-ignore-shaped = false;

#################################
#
# Opacity
#
#################################

inactive-opacity = 1;
active-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = true;

# Dim inactive windows. (0.0 - 1.0)
# inactive-dim = 0.2;
# Do not let dimness adjust based on window opacity.
# inactive-dim-fixed = true;
# Blur background of transparent windows. Bad performance with X Render backend. GLX backend is preferred.
blur-background = true;
# Blur background of opaque windows with transparent frames as well.
blur-background-frame = true;
# Do not let blur radius adjust based on window opacity.
blur-background-fixed = true;
#blur-kern = "29,29,0.132141,0.151907,0.172836,0.194628,0.216916,0.239274,0.261224,0.282259,0.301854,0.319493,0.334689,0.347007,0.356081,0.361639,0.363511,0.361639,0.356081,0.347007,0.334689,0.319493,0.301854,0.282259,0.261224,0.239274,0.216916,0.194628,0.172836,0.151907,0.132141,0.151907,0.174630,0.198689,0.223741,0.249364,0.275066,0.300299,0.324480,0.347007,0.367284,0.384754,0.398913,0.409345,0.415735,0.417887,0.415735,0.409345,0.398913,0.384754,0.367284,0.347007,0.324480,0.300299,0.275066,0.249364,0.223741,0.198689,0.174630,0.151907,0.172836,0.198689,0.226064,0.254567,0.283720,0.312963,0.341673,0.369186,0.394815,0.417887,0.437763,0.453874,0.465743,0.473013,0.475461,0.473013,0.465743,0.453874,0.437763,0.417887,0.394815,0.369186,0.341673,0.312963,0.283720,0.254567,0.226064,0.198689,0.172836,0.194628,0.223741,0.254567,0.286665,0.319493,0.352423,0.384754,0.415735,0.444596,0.470577,0.492959,0.511101,0.524467,0.532654,0.535411,0.532654,0.524467,0.511101,0.492959,0.470577,0.444596,0.415735,0.384754,0.352423,0.319493,0.286665,0.254567,0.223741,0.194628,0.216916,0.249364,0.283720,0.319493,0.356081,0.392782,0.428815,0.463344,0.495511,0.524467,0.549412,0.569632,0.584528,0.593652,0.596725,0.593652,0.584528,0.569632,0.549412,0.524467,0.495511,0.463344,0.428815,0.392782,0.356081,0.319493,0.283720,0.249364,0.216916,0.239274,0.275066,0.312963,0.352423,0.392782,0.433266,0.473013,0.511101,0.546583,0.578523,0.606040,0.628343,0.644775,0.654840,0.658230,0.654840,0.644775,0.628343,0.606040,0.578523,0.546583,0.511101,0.473013,0.433266,0.392782,0.352423,0.312963,0.275066,0.239274,0.261224,0.300299,0.341673,0.384754,0.428815,0.473013,0.516406,0.557988,0.596725,0.631596,0.661637,0.685986,0.703925,0.714913,0.718614,0.714913,0.703925,0.685986,0.661637,0.631596,0.596725,0.557988,0.516406,0.473013,0.428815,0.384754,0.341673,0.300299,0.261224,0.282259,0.324480,0.369186,0.415735,0.463344,0.511101,0.557988,0.602919,0.644775,0.682454,0.714913,0.741224,0.760607,0.772480,0.776479,0.772480,0.760607,0.741224,0.714913,0.682454,0.644775,0.602919,0.557988,0.511101,0.463344,0.415735,0.369186,0.324480,0.282259,0.301854,0.347007,0.394815,0.444596,0.495511,0.546583,0.596725,0.644775,0.689537,0.729831,0.764544,0.792681,0.813411,0.826108,0.830384,0.826108,0.813411,0.792681,0.764544,0.729831,0.689537,0.644775,0.596725,0.546583,0.495511,0.444596,0.394815,0.347007,0.301854,0.319493,0.367284,0.417887,0.470577,0.524467,0.578523,0.631596,0.682454,0.729831,0.772480,0.809222,0.839003,0.860943,0.874382,0.878908,0.874382,0.860943,0.839003,0.809222,0.772480,0.729831,0.682454,0.631596,0.578523,0.524467,0.470577,0.417887,0.367284,0.319493,0.334689,0.384754,0.437763,0.492959,0.549412,0.606040,0.661637,0.714913,0.764544,0.809222,0.847711,0.878908,0.901893,0.915971,0.920712,0.915971,0.901893,0.878908,0.847711,0.809222,0.764544,0.714913,0.661637,0.606040,0.549412,0.492959,0.437763,0.384754,0.334689,0.347007,0.398913,0.453874,0.511101,0.569632,0.628343,0.685986,0.741224,0.792681,0.839003,0.878908,0.911254,0.935084,0.949680,0.954596,0.949680,0.935084,0.911254,0.878908,0.839003,0.792681,0.741224,0.685986,0.628343,0.569632,0.511101,0.453874,0.398913,0.347007,0.356081,0.409345,0.465743,0.524467,0.584528,0.644775,0.703925,0.760607,0.813411,0.860943,0.901893,0.935084,0.959538,0.974515,0.979560,0.974515,0.959538,0.935084,0.901893,0.860943,0.813411,0.760607,0.703925,0.644775,0.584528,0.524467,0.465743,0.409345,0.356081,0.361639,0.415735,0.473013,0.532654,0.593652,0.654840,0.714913,0.772480,0.826108,0.874382,0.915971,0.949680,0.974515,0.989727,0.994850,0.989727,0.974515,0.949680,0.915971,0.874382,0.826108,0.772480,0.714913,0.654840,0.593652,0.532654,0.473013,0.415735,0.361639,0.363511,0.417887,0.475461,0.535411,0.596725,0.658230,0.718614,0.776479,0.830384,0.878908,0.920712,0.954596,0.979560,0.994850,0.994850,0.979560,0.954596,0.920712,0.878908,0.830384,0.776479,0.718614,0.658230,0.596725,0.535411,0.475461,0.417887,0.363511,0.361639,0.415735,0.473013,0.532654,0.593652,0.654840,0.714913,0.772480,0.826108,0.874382,0.915971,0.949680,0.974515,0.989727,0.994850,0.989727,0.974515,0.949680,0.915971,0.874382,0.826108,0.772480,0.714913,0.654840,0.593652,0.532654,0.473013,0.415735,0.361639,0.356081,0.409345,0.465743,0.524467,0.584528,0.644775,0.703925,0.760607,0.813411,0.860943,0.901893,0.935084,0.959538,0.974515,0.979560,0.974515,0.959538,0.935084,0.901893,0.860943,0.813411,0.760607,0.703925,0.644775,0.584528,0.524467,0.465743,0.409345,0.356081,0.347007,0.398913,0.453874,0.511101,0.569632,0.628343,0.685986,0.741224,0.792681,0.839003,0.878908,0.911254,0.935084,0.949680,0.954596,0.949680,0.935084,0.911254,0.878908,0.839003,0.792681,0.741224,0.685986,0.628343,0.569632,0.511101,0.453874,0.398913,0.347007,0.334689,0.384754,0.437763,0.492959,0.549412,0.606040,0.661637,0.714913,0.764544,0.809222,0.847711,0.878908,0.901893,0.915971,0.920712,0.915971,0.901893,0.878908,0.847711,0.809222,0.764544,0.714913,0.661637,0.606040,0.549412,0.492959,0.437763,0.384754,0.334689,0.319493,0.367284,0.417887,0.470577,0.524467,0.578523,0.631596,0.682454,0.729831,0.772480,0.809222,0.839003,0.860943,0.874382,0.878908,0.874382,0.860943,0.839003,0.809222,0.772480,0.729831,0.682454,0.631596,0.578523,0.524467,0.470577,0.417887,0.367284,0.319493,0.301854,0.347007,0.394815,0.444596,0.495511,0.546583,0.596725,0.644775,0.689537,0.729831,0.764544,0.792681,0.813411,0.826108,0.830384,0.826108,0.813411,0.792681,0.764544,0.729831,0.689537,0.644775,0.596725,0.546583,0.495511,0.444596,0.394815,0.347007,0.301854,0.282259,0.324480,0.369186,0.415735,0.463344,0.511101,0.557988,0.602919,0.644775,0.682454,0.714913,0.741224,0.760607,0.772480,0.776479,0.772480,0.760607,0.741224,0.714913,0.682454,0.644775,0.602919,0.557988,0.511101,0.463344,0.415735,0.369186,0.324480,0.282259,0.261224,0.300299,0.341673,0.384754,0.428815,0.473013,0.516406,0.557988,0.596725,0.631596,0.661637,0.685986,0.703925,0.714913,0.718614,0.714913,0.703925,0.685986,0.661637,0.631596,0.596725,0.557988,0.516406,0.473013,0.428815,0.384754,0.341673,0.300299,0.261224,0.239274,0.275066,0.312963,0.352423,0.392782,0.433266,0.473013,0.511101,0.546583,0.578523,0.606040,0.628343,0.644775,0.654840,0.658230,0.654840,0.644775,0.628343,0.606040,0.578523,0.546583,0.511101,0.473013,0.433266,0.392782,0.352423,0.312963,0.275066,0.239274,0.216916,0.249364,0.283720,0.319493,0.356081,0.392782,0.428815,0.463344,0.495511,0.524467,0.549412,0.569632,0.584528,0.593652,0.596725,0.593652,0.584528,0.569632,0.549412,0.524467,0.495511,0.463344,0.428815,0.392782,0.356081,0.319493,0.283720,0.249364,0.216916,0.194628,0.223741,0.254567,0.286665,0.319493,0.352423,0.384754,0.415735,0.444596,0.470577,0.492959,0.511101,0.524467,0.532654,0.535411,0.532654,0.524467,0.511101,0.492959,0.470577,0.444596,0.415735,0.384754,0.352423,0.319493,0.286665,0.254567,0.223741,0.194628,0.172836,0.198689,0.226064,0.254567,0.283720,0.312963,0.341673,0.369186,0.394815,0.417887,0.437763,0.453874,0.465743,0.473013,0.475461,0.473013,0.465743,0.453874,0.437763,0.417887,0.394815,0.369186,0.341673,0.312963,0.283720,0.254567,0.226064,0.198689,0.172836,0.151907,0.174630,0.198689,0.223741,0.249364,0.275066,0.300299,0.324480,0.347007,0.367284,0.384754,0.398913,0.409345,0.415735,0.417887,0.415735,0.409345,0.398913,0.384754,0.367284,0.347007,0.324480,0.300299,0.275066,0.249364,0.223741,0.198689,0.174630,0.151907,0.132141,0.151907,0.172836,0.194628,0.216916,0.239274,0.261224,0.282259,0.301854,0.319493,0.334689,0.347007,0.356081,0.361639,0.363511,0.361639,0.356081,0.347007,0.334689,0.319493,0.301854,0.282259,0.261224,0.239274,0.216916,0.194628,0.172836,0.151907,0.132141";
# blur-background-fixed = true;
blur-kern = "11x11gaussian"
blur-background-exclude = [
	"window_type = 'dock'",
	"window_type = 'desktop'",
	"_GTK_FRAME_EXTENTS@:c"
];
#################################
#
# Fading
#
#################################

# Fade windows during opacity changes.
fading = true;
# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 5;
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.03;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.03;
# Fade windows in/out when opening/closing
# no-fading-openclose = true;

# Specify a list of conditions of windows that should not be faded.
fade-exclude = [ ];

#################################
#
# Other
#
#################################

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;
# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = false;

# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;

# Specify refresh rate of the screen.
# If not specified or 0, picom will try detecting this with X RandR extension.
refresh-rate = 0;

# Vertical synchronization: match the refresh rate of the monitor
#vsync = opengl-mswc;

# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
# Reported to have no effect, though.
dbe = false;
# Limit picom to repaint at most once every 1 / refresh_rate second to boost performance.
# This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
sw-opti = false;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
#unredir-if-possible = true;

# Specify a list of conditions of windows that should always be considered focused.
focus-exclude = [ ];

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
detect-transient = true;
# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;

#################################
#
# Window type settings
#
#################################

wintypes:
{
    tooltip =
    {
        # fade: Fade the particular type of windows.
        fade = true;
        # shadow: Give those windows shadow
        shadow = false;
        # opacity: Default opacity for the type of windows.
        opacity = 0.85;
        # focus: Whether to always consider windows of this type focused.
        focus = true;
    };
};

######################
#
# XSync
# See: https://github.com/yshui/picom/commit/b18d46bcbdc35a3b5620d817dd46fbc76485c20d
#
######################

# Use X Sync fence to sync clients' draw calls. Needed on nvidia-drivers with GLX backend for some users.
#xrender-sync-fence = true;
